name: Build WRT - Step 2 (Download Dependencies)
run-name: Build Step 2 - ${{ inputs.model }}

on:
  workflow_dispatch:
    inputs:
      model:
        required: true
        description: Device Model
        type: choice
        default: jdcloud_ipq60xx_immwrt
        options:
          - jdcloud_ipq60xx_immwrt
      runs-on:
        required: true
        description: Runs on...
        type: choice
        default: ubuntu-22.04
        options:
          - ubuntu-20.04
          - ubuntu-22.04

# 添加权限配置
permissions:
  contents: read
  actions: read
  packages: write
  id-token: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  download_dependencies:
    runs-on: ${{ inputs.runs-on }}
    container:
      image: ghcr.io/ran-xing/image-builder:latest
      # options: --privileged # 如有特殊需求
    steps:
      - name: Get Action ID step1-${{ inputs.model }}
        id: get-run-id
        run: |
          RUN_ID=`gh run --repo ${{ github.repository }} list --workflow build-wrt-1.yml --json databaseId --jq .[0].databaseId`
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
          
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: step1-${{ inputs.model }}
          github-token: ${{ env.GH_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}

      - name: Initialization Values
        shell: bash
        run: |
          tar -xzf step1-${{ inputs.model }}.tar.gz
          rm -f step1-${{ inputs.model }}.tar.gz
          if [ -f ./build_env ]; then
            while IFS='=' read -r key value; do
              [[ -z "$key" || "$key" =~ ^# ]] && continue
              echo "${key}=${value}" >> $GITHUB_ENV
            done < ./build_env
          fi
          if [ ! -d "./${{ env.BUILD_DIR }}" ]; then
            echo "未找到Step 1的完整项目, 请先运行Step 1" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./${{ env.BUILD_DIR }}/dl
          key: step2-${{ hashFiles('**/repo_flag') }}
          restore-keys: |
            ${{ inputs.runs-on }}-${{ hashFiles('**/repo_flag') }}-

      - name: Refresh the cache
        shell: bash
        run: |
          if [ -d "./${{ env.BUILD_DIR }}/dl" ]; then
            find "./${{ env.BUILD_DIR }}/dl" -type f -exec touch {} +
          fi

      - name: Make Download (with cache optimization)
        shell: bash
        run: |
          cd ./${{ env.BUILD_DIR }}
          make download -j$(($(nproc) * 2))
          cd ..
          tar -czf step2-${{ inputs.model }}.tar.gz ./*

      - name: Upload Step 2 Artifacts
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: step2-${{ inputs.model }}
          path: step2-${{ inputs.model }}.tar.gz
          retention-days: 7

      - name: Cache Status
        run: |
          echo "========cache status========"
          echo "ccache: $(du -sh ./${{ env.BUILD_DIR }}/.ccache 2>/dev/null | cut -f 1 || echo 'N/A')"
          echo "staging: $(du -sh ./${{ env.BUILD_DIR }}/staging_dir 2>/dev/null | cut -f 1 || echo 'N/A')"
          echo "dl: $(du -sh ./${{ env.BUILD_DIR }}/dl 2>/dev/null | cut -f 1 || echo 'N/A')" 

      - name: Output artifact info to summary
        run: |
          echo "### 本次构建生成的 Artifact" >> $GITHUB_STEP_SUMMARY
          echo "- 名称: step2-${{ inputs.model }}" >> $GITHUB_STEP_SUMMARY
          echo "- ID: ${{ steps.artifact-upload-step.outputs.artifact-id }}" >> $GITHUB_STEP_SUMMARY
